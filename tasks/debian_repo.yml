---
- apt: update_cache=yes
  changed_when: false

- name: install dependencies to let apt work with https
  apt:
    name: "{{ item }}"
  with_items:
    - "apt-transport-https"
    - "ca-certificates"

- name: add pgp key
  apt_key: url=https://packages.grafana.com/gpg.key

- name: add repo
  apt_repository: repo='deb https://packages.grafana.com/oss/deb stable main' state=present update_cache=yes

- name: add beta repo
  apt_repository: repo='deb https://packages.grafana.com/oss/deb beta main' state=present update_cache=yes
  when: grafana_beta

- name: remove beta repo
  apt_repository: repo='deb https://packages.grafana.com/oss/deb beta main' state=absent update_cache=yes
  when: not grafana_beta
  register: test_repo_deleted

- name: remove grafana beta
  apt: name=grafana state=absent
  when: test_repo_deleted.changed

- name: block grafana from being installed from ubuntu repo
  copy: content="Package{{':'}} grafana\nPin{{':'}} release o=Ubuntu\nPin-Priority{{':'}} -1\n"
       dest=/etc/apt/preferences.d/grafana
  when: ansible_distribution_version is version(16.04, '>=')

- name: install grafana
  apt: name=grafana state={{'latest' if grafana_latest else 'present' }}
  notify:
    - restart grafana-server

- name: check grafana version
  shell: dpkg -s grafana|sed -r 's/"/\\"/g;s/^([^:]+):\s*(.*)$/"\1"{{':'}} "\2",/;tx;d;:x'|tr -d '\n'|sed -r 's/(.*),$/{\1}/'
  changed_when: no
  register: dpkg
  tags: test

- name: show grafana version
  debug: msg={{ (dpkg.stdout|from_json).Version }}
  tags: test

- set_fact:
    grafana_install_version: "{{ (dpkg.stdout|from_json).Version|regex_replace('-(\\d+|beta)+$', '') }}"
  tags: test
